@namespace WebVella.Pulsar.Components
@inherits WvpBase
@using WebVella.Pulsar.Models
@using WebVella.Pulsar.Utils
@using WebVella.Pulsar.Services;

@if (!String.IsNullOrWhiteSpace(svgHtml))
{
	<span class="wvp-icon @InternalCssClass @Class" @attributes="@AdditionalAttributes">
		@((MarkupString)svgHtml)
	</span>
}
@code {

	[Parameter]
	public string Source { get; set; } = "";

	[Parameter]
	public WvpIconType Type { get; set; } = WvpIconType.NoIcon;

	[Parameter]
	public WvpSize Size { get; set; } = WvpSize.Normal;

	[Parameter]
	public bool IsSpinning { get; set; } = false;

	protected string InternalCssClass = "";

	protected string svgHtml = "";

	protected override void OnParametersSet()
	{
		InternalCssClass = "";
		svgHtml = "";

		if (Size != WvpSize.Normal)
		{
			InternalCssClass += $" wvp-icon--{Size.ToDescriptionString()} ";
		}

		if (IsSpinning)
		{
			InternalCssClass += $" wvp-icon--spin ";
		}

		//SVG content
		if (!String.IsNullOrWhiteSpace(Source))
		{
			if (Source.StartsWith("<svg"))
			{
				svgHtml = Source;
			}
			else
			{
				var enumDescDict = IconTypeService.GetIconTypeDescriptionEnumDict();
				if (enumDescDict.ContainsKey(Source))
				{
					Type = enumDescDict[Source];
				}
			}
		}
		if (Type != WvpIconType.NoIcon)
		{
			svgHtml = IconTypeService.GetSVGContentForIconType(Type);
		}
		base.OnParametersSet();
	}
}
