@namespace WebVella.Pulsar.Components
@inherits WvpFieldBase
@using WebVella.Pulsar.Models
@using Microsoft.AspNetCore.Components.Web

@* Field Content here*@

@switch (Mode)
{
	@* Display *@
	@*********************************************@
	case WvpFieldMode.Display:
	case WvpFieldMode.Print:
		{
			<div class="form-control-plaintext @Class @(Size == WvpSize.Small ? "form-control-sm" : "") @(_value == null ? "form-control-plaintext--empty" : "")"
				  id="@_domElementId">
				@(_value.ToString())
			</div>
		}
		break;

	@* Form *@
	@*********************************************@
	case WvpFieldMode.Form:
		{
			<input
				   class="form-control @Class @(Size == WvpSize.Small ? "form-control-sm" : "")"
					 id="@_domElementId"
					 name="@Name"
				     min="@Min"
					 max="@Max"
					 step="@Step"
					 value="@_value" @oninput="(e) => _onInputChangeKeypressHandler(e)" />
		}
		break;

	@* Design *@
	@*********************************************@
	case WvpFieldMode.InlineEdit:
		{
			@if (!_editEnabled)
			{
				<div class="input-group @Class @(Size == WvpSize.Small ? "input-group-sm" : "")">
					<div class="form-control-plaintext @(_value == null ? "form-control-plaintext--empty" : "")"
						  id="@_domElementId"
						  @onclick="@(e => _toggleInlineEditClickHandler(true,false))">
						@if (_value != null)
						{
							@_value
						}
						else
						{
							@((MarkupString)ValueEmptyText)
						}
					</div>
					<div class="input-group-append">
						<div class="input-group-text" @onclick="@(e => _toggleInlineEditClickHandler(true,false))">
							<WvpIcon Type="WvpIconType.BsPencil" Size="WvpSize.Small" />
						</div>
					</div>
				</div>
			}
			else
			{
				<input class="form-control @Class @(Size == WvpSize.Small ? "form-control-sm" : "")"
						 id="@_domElementId"
						 name="@Name"
						 min="@Min"
						 max="@Max"
						 step="@Step"
						 value="@_value" 
						 @oninput="(e) => _onInputChangeKeypressHandler(e)"
						 @onkeypress="@(e => _onKeypressHandler(e))"
						 @onfocusout="@(e => _toggleInlineEditClickHandler(false,true))" />
			}
		}
		break;
}