@namespace WebVella.Pulsar.Components
@inherits WvpFieldBase
@using WebVella.Pulsar.Models
@using Microsoft.AspNetCore.Components.Web

@* Field Content here*@

@switch (Mode)
{
    @* Display *@
    @*********************************************@
    case WvpFieldMode.Display:
    case WvpFieldMode.Print:
        {
            <div class="form-control-plaintext @Class  @(Size == WvpSize.Small ? "form-control-sm" : "") @(!_value.HasValue ? "form-control-plaintext--empty" : "")"
                 id="@_domElementId">
                @if (!_value.HasValue)
                {
                    @if (String.IsNullOrWhiteSpace(ValueEmptyText))
                    {
                        <span>&nbsp;</span>
                    }
                    else
                    {
                        <span>@ValueEmptyText</span>
                    }
                }
                else
                {
                    string stringValue = _value?.ToString(_formatSpecifier, Culture);
                    @stringValue
                }
            </div>
        }
        break;

    @* Form *@
    @*********************************************@
    case WvpFieldMode.Form:
        {
            <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">%</span>
                    </div>
            <input class="form-control @Class @(Size == WvpSize.Small ? "form-control-sm" : "")"
                   step="0.01"
                   id="@_domElementId"
                   name="@Name"
                   value="@_percent" @oninput="(e) => _onInputChangeKeypressHandler(e)" @onfocusout="(e)=>_onFocusOutForm(e)" />
            </div>
        }
        break;

    @* Design *@
    @*********************************************@
    case WvpFieldMode.InlineEdit:
        {
            @if (!_editEnabled)
            {
                <div class="input-group @Class @(Size == WvpSize.Small ? "input-group-sm" : "")">
                    <div class="form-control-plaintext @(!_value.HasValue ? "form-control-plaintext--empty" : "")"
                         id="@_domElementId"
                         @onclick="@(e => _toggleInlineEditClickHandler(true,false))">
                        @if (!_value.HasValue)
                        {
                            @if (String.IsNullOrWhiteSpace(ValueEmptyText))
                            {
                                <span>&nbsp;</span>
                            }
                            else
                            {
                                <span>@ValueEmptyText</span>
                            }
                        }
                        else
                        {
                            string stringValue = _value?.ToString(_formatSpecifier, Culture);
                            @stringValue
                        }
                    </div>
                    <div class="input-group-append">
                        <div class="input-group-text" @onclick="@(e => _toggleInlineEditClickHandler(true,false))">
                            <WvpIcon Type="WvpIconType.BsPencil" Size="WvpSize.Small" />
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">%</span>
                    </div>
                    <input class="form-control @Class @(Size == WvpSize.Small ? "form-control-sm" : "")"
                           id="@_domElementId"
                           type="number"
                           step="0.01"
                           @bind-value="@_percent" @bind-value:event="oninput"
                           @onkeypress="@(e => _onKeypressHandler(e))"
                           @onfocusout="@(e => _toggleInlineEditClickHandler(false,true))" />
                </div>
            }
        }
        break;
}